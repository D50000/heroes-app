{"version":3,"sources":["components/SingleHero.js","components/Heroes.js","components/ProfileContainer.js","components/HeroProfile.js","components/NotFound.js","components/Router.js","serviceWorker.js","index.js"],"names":["SingleHero","this","props","id","image","name","className","onClick","loadProfile","src","alt","React","Component","Heroes","state","heroes","status","url","fetch","then","response","json","data","setState","console","log","map","hero","to","pathname","index","activeClassName","key","ProfileContainer","batman","onKeyDown","e","alert","badmanRender","role","aria-label","document","addEventListener","removeEventListener","HeroProfile","skill","left","heroId","undefined","text","handleLoadProfile","a","location","res","Object","keys","k","changeSkill","skillName","method","updateSkillPoints","patchData","patchUrl","headers","body","JSON","stringify","statusText","nowId","str","int","agi","luk","TransitionGroup","component","CSSTransition","classNames","timeout","enter","exit","NotFound","jokerRender","RouterConfig","basename","path","Boolean","window","hostname","match","ReactDOM","render","Router","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.02a1abd0.chunk.js","sourcesContent":["import React from \"react\";\n\nexport default class SingleHero extends React.Component {\n\n    render(){\n        const { id, image, name } = this.props;\n\n        return(\n\t\t\t<div className=\"heroCard\" onClick={this.props.loadProfile(id)}>\n                <img src={image} alt={name} />\n                <p>{name}</p>\n        \t</div>   \n        )\n     }\n}\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\n// import components\nimport SingleHero from \"./SingleHero\";\n\nexport default class Heroes extends React.Component {\n\tstate = {\n\t\theroes: [],\n\t\tstatus: {}\n    };\n\n\t// Life cycle: fetch the api when mount.\n\tcomponentDidMount(){\n\t\tfetch(\"https://hahow-recruit.herokuapp.com/heroes\")\n\t\t\t.then(function(response){\n\t\t\t\treturn response.json();\n\t\t\t})\n\t\t\t.then(heroes => {\n\t\t\t\t// console.log(typeof(heroes));\n\t\t\t\tthis.setState({ heroes: heroes });\n\t\t\t\tconsole.log(heroes);\n\t\t\t});\n\n\t}\n\n\t// Load single hero status.\n\tloadProfile = id => {\n\t\t// function generator\n\t\treturn () => {\n\t\t\tconst url = `https://hahow-recruit.herokuapp.com/heroes/${id}/profile`;\n\t\t\tfetch(url)\n\t\t\t\t.then(function(response){\n\t\t\t\t\treturn response.json();\n\t\t\t\t})\n\t\t\t\t.then(data => {\n\t\t\t\t\t// console.log(typeof(data));\n\t\t\t\t\tthis.setState({ status: data});\n\t\t\t\t\tconsole.log(data);\n\t\t\t\t});\n\t\t}\n\t}\n\t\n    render(){\n       return(\n\t\t\t<div className=\"container shadow p-3 mb-5 bg-white rounded\">\n\t\t\t\t{this.state.heroes.map( hero => \n\t\t\t\t<NavLink to={{pathname: `/heroes/${hero.id}`, state: { index: hero.id }}} \n\t\t\t\t\tactiveClassName=\"selected\" key={hero.id}>\n\t\t\t\t\t<SingleHero\n\t\t\t\t\t\tkey={hero.id}\n\t\t\t\t\t\tid={hero.id}\n\t\t\t\t\t\timage={hero.image}\n\t\t\t\t\t\tname={hero.name}\n\t\t\t\t\t\tloadProfile={this.loadProfile}\n\t\t\t\t\t/>\n\t\t\t\t</NavLink>\n\t\t\t\t)}\n\t\t\t</div>\n        )\n     }\n}\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nexport default class ProfileContainer extends React.Component {\n    state = {\n\t\tbatman: 0\n    };\n\n    componentDidMount(){\n        console.log(\"xxxxxxx\");\n        document.addEventListener(\"keydown\", this.onKeyDown);\n    }\n\n    componentWillUnmount(){\n        console.log(\"YYYYY\");\n        document.removeEventListener(\"keydown\", this.onKeyDown)\n    }\n\n    onKeyDown = (e) => {\n\t\tif (e.key === \"B\") {\n\t\t\talert(\"Batman arrives\");\n\t\t\tthis.setState({ batman: 1 });\n\t\t}\n\t}\n\n    badmanRender = (batman, url) => {\n        if (batman === 1) {\n            return (\n                <div className=\"heroCard batman\">\n                    <img src={`${url}/batman.png`} alt=\"batman\" />\n                    <p>Batman: Select a hero.<span role=\"img\" aria-label=\"Up Arrow\"> ⬆️⬆️⬆️</span></p>\n                    <p>Where is Joker ??</p>\n                </div>\n            )\n        } else {\n            return (\n                <p></p>\n            )\n        }\n    }\n\n\n    render(){\n        const url = process.env.NODE_ENV === \"production\" ? \"/heroes-app\" : \"\";\n        return(\n            <Link to={{pathname: \"/JOKER\", state: { batman: this.state.batman }}}>\n                { this.badmanRender(this.state.batman, url) }\n            </Link>\n        )\n     }\n}\n","import React from \"react\";\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\n\nexport default class HeroProfile extends React.Component {\n    // {str, int, agi, luk}\n    state = {\n        skill: {},\n        left: 0,\n        heroId: undefined,\n        text: \"\"\n    };\n\n    // Loading datas for access directly.\n    componentDidMount() {\n        console.log(\"mount\")\n        this.handleLoadProfile();\n    }\n\n    componentDidUpdate(){\n        console.log(\"update\")\n        const id = this.props.location.state.index;\n        const nowId = this.state.heroId;\n        if(id !== nowId){\n            this.handleLoadProfile();\n            console.log(`Hero Id change: ${id} !== ${nowId}`)\n        }\n    }\n    \n    handleLoadProfile = async () => {\n        const id = this.props.location.state.index;\n        const url = `https://hahow-recruit.herokuapp.com/heroes/${id}/profile`;\n        const res = await fetch(url);\n        const data = await res.json();\n\n        for (let k of Object.keys(data)) {\n            if (this.state.skill[k] !== data[k]) {\n                this.setState({skill: data, left: 0, heroId: id, text: \"\"});\n                break;\n            }\n        }\n    }\n\n    // Modify skill points\n    changeSkill = (skillName, method) => {\n        return () => {\n            let skill = this.state.skill;\n            let left = this.state.left\n            if(method === \"+\" && left === 0){\n                this.setState({text: \"無點數了\"});\n                return false;\n            }else if(method === \"+\"){\n                skill[skillName] += 1;\n                left -= 1;\n            }else if(method === \"-\" && skill[skillName] === 0){\n                this.setState({text: \"不能低於0\"});\n                return false;\n            }else{\n                skill[skillName] -= 1;\n                left += 1;\n            }\n            console.log(left);\n            console.log(skill);\n            this.setState({skill, left});\n        }\n    }\n    \n\tupdateSkillPoints = async (patchData) => {\n        if(this.state.left !== 0){\n            this.setState({text: \"技能點尚未點完！\"});\n            return false;\n        }\n        const id = this.state.heroId;\n        const patchUrl = `https://hahow-recruit.herokuapp.com/heroes/${id}/profile`;\n        const res = await fetch(patchUrl, {\n\t        method: \"PATCH\",\n\t\t    headers: {\n\t\t    // \"Accept\": \"application/json\",\n\t\t    \"Content-Type\": \"application/json\"\n\t    },\n\t    body: JSON.stringify(patchData)\n\t    });\n        console.log(res.status, res.statusText);\n        this.setState({text: \"技能點更新成功！\"});\n\t}\n\n    render(){\n        const { str, int, agi, luk } = this.state.skill;\n        \n        return(\n            <TransitionGroup component=\"div\" className=\"profileAnimate\">\n            <CSSTransition classNames=\"profileAnimate\" key={this.state.heroId} timeout={{enter:250, exit:250}}>\n\t\t\t<section className=\"shadow p-3 mb-5 bg-white rounded\">\n                <div className=\"leftBox\">\n                    {/* Strength */}\n                    <div className=\"strSkill\">\n                        <span>STR</span>\n                        <button onClick={this.changeSkill(\"str\", \"+\")}>+</button>\n                        { str && <span>{str}</span> }\n                        <button className=\"decBtn\" onClick={this.changeSkill(\"str\", \"-\")}>-</button>\n                    </div>\n                    {/* Intelligence */}\n                    <div className=\"intSkill\">\n                        <span>INT</span>\n                        <button onClick={this.changeSkill(\"int\", \"+\")}>+</button>\n                        { int && <span>{int}</span> }\n                        <button className=\"decBtn\" onClick={this.changeSkill(\"int\", \"-\")}>-</button>\n                    </div>\n                    {/* Agility */}\n                    <div className=\"agiSkill\">\n                        <span>AGI</span>\n                        <button onClick={this.changeSkill(\"agi\", \"+\")}>+</button>\n                        { agi && <span>{agi}</span> }\n                        <button className=\"decBtn\" onClick={this.changeSkill(\"agi\", \"-\")}>-</button>\n                    </div>\n                    {/* Luck */}\n                    <div className=\"lukSkill\">\n                        <span>LUK</span>\n                        <button onClick={this.changeSkill(\"luk\", \"+\")}>+</button>\n                        { luk && <span>{luk}</span> }\n                        <button className=\"decBtn\" onClick={this.changeSkill(\"luk\", \"-\")}>-</button>\n                    </div>\n                </div>\n                <span className=\"middleBox\">{this.state.text}</span>\n                <div className=\"rightBox\">\n                    <div>\n                        <p>剩餘點數：\n                            { this.state.left && <span>{this.state.left}</span>}\n                        </p>\n                    </div>\n                    <button onClick={() => {this.updateSkillPoints(this.state.skill)}}>儲存</button>  \n                </div>\n            </section>\n            </CSSTransition>\n            </TransitionGroup>\n        )\n     }\n}\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nexport default class NotFound extends React.Component {\n    jokerRender = (batman, url) => {\n        if (batman === 1) {\n            return (\n                <div className=\"heroCard joker\">\n                    <img src={`${url}/joker.png`} alt=\"joker\" />\n                    <p>Joker: URL Not Found </p>\n                </div>\n            )\n        } else {\n            return (\n                <p>URL Not Found </p>\n            )\n        }\n    }\n\n    render(){\n        let batman = 0;\n        if(this.props.location.state !== undefined){\n            batman = this.props.location.state.batman;\n        };\n        const url = process.env.NODE_ENV === \"production\" ? \"/heroes-app\" : \"\";\n        return(\n            <Link to=\"/heroes\">\n                { this.jokerRender(batman, url) }\n            </Link>\n        )\n     }\n}\n","import { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport React from \"react\";\nimport Heroes from \"./Heroes\";\nimport ProfileContainer from \"./ProfileContainer\";\nimport HeroProfile from \"./HeroProfile\";\nimport NotFound from \"./NotFound\";\n\n// Stateless Functional Components\nconst RouterConfig = () => (\n    <Router basename='/'>\n        <Route path=\"/heroes\" component={Heroes} />\n        <Switch>\n            <Route path=\"/heroes/:heroId\" component={HeroProfile} />\n            <Route path=\"/heroes\" component={ProfileContainer} />\n            <Route component={NotFound} />\n        </Switch>\n    </Router>\n);\n\nexport default RouterConfig;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Router from './components/Router';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './css/index.css';\n\nReactDOM.render(<Router />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}